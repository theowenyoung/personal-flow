import puppeteer from "./mod.ts";
import { PUPPETEER_REVISIONS } from "./vendor/puppeteer-core/puppeteer/revisions.js";
import ProgressBar from "https://deno.land/x/progress@v1.1.4/mod.ts";
let product = Deno.env.get("PUPPETEER_PRODUCT");
if (product != "chrome" && product != "firefox") {
    if (product != undefined) {
        console.warn(`Unknown product '${product}', falling back to 'chrome'.`);
    }
    product = "chrome";
}
const fetcher = puppeteer.createBrowserFetcher({ product });
let revision;
if (product == "chrome") {
    revision = Deno.env.get("PUPPETEER_CHROMIUM_REVISION") ||
        PUPPETEER_REVISIONS.chromium;
}
else if (product == "firefox") {
    puppeteer._preferredRevision = PUPPETEER_REVISIONS.firefox;
    const req = await fetch("https://product-details.mozilla.org/1.0/firefox_versions.json");
    const versions = await req.json();
    revision = versions.FIREFOX_NIGHTLY;
    if (!versions.FIREFOX_NIGHTLY) {
        throw new Error("Firefox version not found");
    }
}
const revisionInfo = fetcher.revisionInfo(revision);
if (revisionInfo.local) {
    console.log(`Already downloaded at ${revisionInfo.executablePath}`);
}
else {
    let progressBar;
    const newRevisionInfo = await fetcher.download(revisionInfo.revision, (current, total) => {
        if (!progressBar) {
            progressBar = new ProgressBar({
                total,
            });
        }
        if (!progressBar.isCompleted) {
            progressBar.render(current);
        }
        else {
            console.log("Done downloading. Installing now.");
        }
    });
    console.log(`Downloaded ${newRevisionInfo.product} ${newRevisionInfo.revision} to ${newRevisionInfo.executablePath} from ${newRevisionInfo.url}`);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdGFsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImluc3RhbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxTQUFTLE1BQU0sVUFBVSxDQUFDO0FBQ2pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sV0FBVyxNQUFNLDRDQUE0QyxDQUFDO0FBRXJFLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDaEQsSUFBSSxPQUFPLElBQUksUUFBUSxJQUFJLE9BQU8sSUFBSSxTQUFTLEVBQUU7SUFDL0MsSUFBSSxPQUFPLElBQUksU0FBUyxFQUFFO1FBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQUMsb0JBQW9CLE9BQU8sOEJBQThCLENBQUMsQ0FBQztLQUN6RTtJQUNELE9BQU8sR0FBRyxRQUFRLENBQUM7Q0FDcEI7QUFDRCxNQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsb0JBQW9CLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQzVELElBQUksUUFBUSxDQUFDO0FBQ2IsSUFBSSxPQUFPLElBQUksUUFBUSxFQUFFO0lBQ3ZCLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQztRQUNwRCxtQkFBbUIsQ0FBQyxRQUFRLENBQUM7Q0FDaEM7S0FBTSxJQUFJLE9BQU8sSUFBSSxTQUFTLEVBQUU7SUFDL0IsU0FBUyxDQUFDLGtCQUFrQixHQUFHLG1CQUFtQixDQUFDLE9BQU8sQ0FBQztJQUMzRCxNQUFNLEdBQUcsR0FBRyxNQUFNLEtBQUssQ0FDckIsK0RBQStELENBQ2hFLENBQUM7SUFDRixNQUFNLFFBQVEsR0FBRyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQyxRQUFRLEdBQUcsUUFBUSxDQUFDLGVBQWUsQ0FBQztJQUNwQyxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRTtRQUM3QixNQUFNLElBQUksS0FBSyxDQUFDLDJCQUEyQixDQUFDLENBQUM7S0FDOUM7Q0FDRjtBQUVELE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDcEQsSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFO0lBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0NBQ3JFO0tBQU07SUFDTCxJQUFJLFdBQXdCLENBQUM7SUFDN0IsTUFBTSxlQUFlLEdBQUcsTUFBTSxPQUFPLENBQUMsUUFBUSxDQUM1QyxZQUFZLENBQUMsUUFBUSxFQUNyQixDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUNqQixJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2hCLFdBQVcsR0FBRyxJQUFJLFdBQVcsQ0FBQztnQkFDNUIsS0FBSzthQUNOLENBQUMsQ0FBQztTQUNKO1FBQ0QsSUFBSSxDQUFFLFdBQW1CLENBQUMsV0FBVyxFQUFFO1lBQ3JDLFdBQVcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDN0I7YUFBTTtZQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUMsQ0FBQztTQUNsRDtJQUNILENBQUMsQ0FDRixDQUFDO0lBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FDVCxjQUFjLGVBQWUsQ0FBQyxPQUFPLElBQUksZUFBZSxDQUFDLFFBQVEsT0FBTyxlQUFlLENBQUMsY0FBYyxTQUFTLGVBQWUsQ0FBQyxHQUFHLEVBQUUsQ0FDckksQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHB1cHBldGVlciBmcm9tIFwiLi9tb2QudHNcIjtcbmltcG9ydCB7IFBVUFBFVEVFUl9SRVZJU0lPTlMgfSBmcm9tIFwiLi92ZW5kb3IvcHVwcGV0ZWVyLWNvcmUvcHVwcGV0ZWVyL3JldmlzaW9ucy5qc1wiO1xuaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gXCJodHRwczovL2Rlbm8ubGFuZC94L3Byb2dyZXNzQHYxLjEuNC9tb2QudHNcIjtcblxubGV0IHByb2R1Y3QgPSBEZW5vLmVudi5nZXQoXCJQVVBQRVRFRVJfUFJPRFVDVFwiKTtcbmlmIChwcm9kdWN0ICE9IFwiY2hyb21lXCIgJiYgcHJvZHVjdCAhPSBcImZpcmVmb3hcIikge1xuICBpZiAocHJvZHVjdCAhPSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLndhcm4oYFVua25vd24gcHJvZHVjdCAnJHtwcm9kdWN0fScsIGZhbGxpbmcgYmFjayB0byAnY2hyb21lJy5gKTtcbiAgfVxuICBwcm9kdWN0ID0gXCJjaHJvbWVcIjtcbn1cbmNvbnN0IGZldGNoZXIgPSBwdXBwZXRlZXIuY3JlYXRlQnJvd3NlckZldGNoZXIoeyBwcm9kdWN0IH0pO1xubGV0IHJldmlzaW9uO1xuaWYgKHByb2R1Y3QgPT0gXCJjaHJvbWVcIikge1xuICByZXZpc2lvbiA9IERlbm8uZW52LmdldChcIlBVUFBFVEVFUl9DSFJPTUlVTV9SRVZJU0lPTlwiKSB8fFxuICAgIFBVUFBFVEVFUl9SRVZJU0lPTlMuY2hyb21pdW07XG59IGVsc2UgaWYgKHByb2R1Y3QgPT0gXCJmaXJlZm94XCIpIHtcbiAgcHVwcGV0ZWVyLl9wcmVmZXJyZWRSZXZpc2lvbiA9IFBVUFBFVEVFUl9SRVZJU0lPTlMuZmlyZWZveDtcbiAgY29uc3QgcmVxID0gYXdhaXQgZmV0Y2goXG4gICAgXCJodHRwczovL3Byb2R1Y3QtZGV0YWlscy5tb3ppbGxhLm9yZy8xLjAvZmlyZWZveF92ZXJzaW9ucy5qc29uXCIsXG4gICk7XG4gIGNvbnN0IHZlcnNpb25zID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgcmV2aXNpb24gPSB2ZXJzaW9ucy5GSVJFRk9YX05JR0hUTFk7XG4gIGlmICghdmVyc2lvbnMuRklSRUZPWF9OSUdIVExZKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRmlyZWZveCB2ZXJzaW9uIG5vdCBmb3VuZFwiKTtcbiAgfVxufVxuXG5jb25zdCByZXZpc2lvbkluZm8gPSBmZXRjaGVyLnJldmlzaW9uSW5mbyhyZXZpc2lvbik7XG5pZiAocmV2aXNpb25JbmZvLmxvY2FsKSB7XG4gIGNvbnNvbGUubG9nKGBBbHJlYWR5IGRvd25sb2FkZWQgYXQgJHtyZXZpc2lvbkluZm8uZXhlY3V0YWJsZVBhdGh9YCk7XG59IGVsc2Uge1xuICBsZXQgcHJvZ3Jlc3NCYXI6IFByb2dyZXNzQmFyO1xuICBjb25zdCBuZXdSZXZpc2lvbkluZm8gPSBhd2FpdCBmZXRjaGVyLmRvd25sb2FkKFxuICAgIHJldmlzaW9uSW5mby5yZXZpc2lvbixcbiAgICAoY3VycmVudCwgdG90YWwpID0+IHtcbiAgICAgIGlmICghcHJvZ3Jlc3NCYXIpIHtcbiAgICAgICAgcHJvZ3Jlc3NCYXIgPSBuZXcgUHJvZ3Jlc3NCYXIoe1xuICAgICAgICAgIHRvdGFsLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmICghKHByb2dyZXNzQmFyIGFzIGFueSkuaXNDb21wbGV0ZWQpIHtcbiAgICAgICAgcHJvZ3Jlc3NCYXIucmVuZGVyKGN1cnJlbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJEb25lIGRvd25sb2FkaW5nLiBJbnN0YWxsaW5nIG5vdy5cIik7XG4gICAgICB9XG4gICAgfSxcbiAgKTtcbiAgY29uc29sZS5sb2coXG4gICAgYERvd25sb2FkZWQgJHtuZXdSZXZpc2lvbkluZm8ucHJvZHVjdH0gJHtuZXdSZXZpc2lvbkluZm8ucmV2aXNpb259IHRvICR7bmV3UmV2aXNpb25JbmZvLmV4ZWN1dGFibGVQYXRofSBmcm9tICR7bmV3UmV2aXNpb25JbmZvLnVybH1gLFxuICApO1xufVxuIl19