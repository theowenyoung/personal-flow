export class MemoryAdapter {
    namespaces = new Map();
    checkNamespace(ns) {
        if (this.namespaces.has(ns))
            return;
        else
            this.namespaces.set(ns, new Map());
    }
    ns(ns) {
        this.checkNamespace(ns);
        return this.namespaces.get(ns);
    }
    set(k, v, ns = "", ttl = 0) {
        const n = this.ns(ns);
        n?.set(k, { value: v, ttl });
        return this;
    }
    get(k, ns = "") {
        const n = this.ns(ns);
        const v = n?.get(k);
        return !v ? undefined : { key: k, ns, value: v.value, ttl: v.ttl };
    }
    has(k, ns = "") {
        return this.ns(ns)?.has(k) ?? false;
    }
    delete(k, ns = "") {
        const n = this.ns(ns);
        return n?.delete(k) ?? false;
    }
    keys(ns = "") {
        return [...(this.ns(ns)?.keys() ?? [])];
    }
    clear(ns = "") {
        this.namespaces.set(ns, new Map());
        return this;
    }
    deleteExpired(ns = "") {
        const n = this.ns(ns);
        for (const e of n.entries()) {
            if (e[1].ttl !== 0 && Date.now() > e[1].ttl) {
                n.delete(e[0]);
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWVtb3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxhQUFhO0lBQ3hCLFVBQVUsR0FHTixJQUFJLEdBQUcsRUFBRSxDQUFDO0lBRWQsY0FBYyxDQUFDLEVBQVU7UUFDdkIsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFBRSxPQUFPOztZQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxFQUFFLENBQUMsRUFBVTtRQUNYLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDeEIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBR0QsR0FBRyxDQUFDLENBQVMsRUFBRSxDQUFNLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLEdBQUcsQ0FBQztRQUNyQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3RCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzdCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELEdBQUcsQ0FBQyxDQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUU7UUFDcEIsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0QixNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ3JFLENBQUM7SUFFRCxHQUFHLENBQUMsQ0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxNQUFNLENBQUMsQ0FBUyxFQUFFLEVBQUUsR0FBRyxFQUFFO1FBQ3ZCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDdEIsT0FBTyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQztJQUMvQixDQUFDO0lBRUQsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ1YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELEtBQUssQ0FBQyxFQUFFLEdBQUcsRUFBRTtRQUNYLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDbkMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsYUFBYSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQ25CLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFFLENBQUM7UUFDdkIsS0FBSyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDM0IsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDM0MsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNoQjtTQUNGO0lBQ0gsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWRhcHRlciB9IGZyb20gXCIuL2FkYXB0ZXIudHNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBNZW1vcnlBZGFwdGVyIGltcGxlbWVudHMgQWRhcHRlciB7XHJcbiAgbmFtZXNwYWNlczogTWFwPFxyXG4gICAgc3RyaW5nLFxyXG4gICAgTWFwPHN0cmluZywgeyB2YWx1ZTogc3RyaW5nOyB0dGw6IG51bWJlciB9PlxyXG4gID4gPSBuZXcgTWFwKCk7XHJcblxyXG4gIGNoZWNrTmFtZXNwYWNlKG5zOiBzdHJpbmcpIHtcclxuICAgIGlmICh0aGlzLm5hbWVzcGFjZXMuaGFzKG5zKSkgcmV0dXJuO1xyXG4gICAgZWxzZSB0aGlzLm5hbWVzcGFjZXMuc2V0KG5zLCBuZXcgTWFwKCkpO1xyXG4gIH1cclxuXHJcbiAgbnMobnM6IHN0cmluZykge1xyXG4gICAgdGhpcy5jaGVja05hbWVzcGFjZShucyk7XHJcbiAgICByZXR1cm4gdGhpcy5uYW1lc3BhY2VzLmdldChucyk7XHJcbiAgfVxyXG5cclxuICAvLyBkZW5vLWxpbnQtaWdub3JlIG5vLWV4cGxpY2l0LWFueVxyXG4gIHNldChrOiBzdHJpbmcsIHY6IGFueSwgbnMgPSBcIlwiLCB0dGwgPSAwKSB7XHJcbiAgICBjb25zdCBuID0gdGhpcy5ucyhucyk7XHJcbiAgICBuPy5zZXQoaywgeyB2YWx1ZTogdiwgdHRsIH0pO1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfVxyXG5cclxuICBnZXQoazogc3RyaW5nLCBucyA9IFwiXCIpIHtcclxuICAgIGNvbnN0IG4gPSB0aGlzLm5zKG5zKTtcclxuICAgIGNvbnN0IHYgPSBuPy5nZXQoayk7XHJcbiAgICByZXR1cm4gIXYgPyB1bmRlZmluZWQgOiB7IGtleTogaywgbnMsIHZhbHVlOiB2LnZhbHVlLCB0dGw6IHYudHRsIH07XHJcbiAgfVxyXG5cclxuICBoYXMoazogc3RyaW5nLCBucyA9IFwiXCIpIHtcclxuICAgIHJldHVybiB0aGlzLm5zKG5zKT8uaGFzKGspID8/IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlKGs6IHN0cmluZywgbnMgPSBcIlwiKSB7XHJcbiAgICBjb25zdCBuID0gdGhpcy5ucyhucyk7XHJcbiAgICByZXR1cm4gbj8uZGVsZXRlKGspID8/IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAga2V5cyhucyA9IFwiXCIpIHtcclxuICAgIHJldHVybiBbLi4uKHRoaXMubnMobnMpPy5rZXlzKCkgPz8gW10pXTtcclxuICB9XHJcblxyXG4gIGNsZWFyKG5zID0gXCJcIikge1xyXG4gICAgdGhpcy5uYW1lc3BhY2VzLnNldChucywgbmV3IE1hcCgpKTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlRXhwaXJlZChucyA9IFwiXCIpIHtcclxuICAgIGNvbnN0IG4gPSB0aGlzLm5zKG5zKSE7XHJcbiAgICBmb3IgKGNvbnN0IGUgb2Ygbi5lbnRyaWVzKCkpIHtcclxuICAgICAgaWYgKGVbMV0udHRsICE9PSAwICYmIERhdGUubm93KCkgPiBlWzFdLnR0bCkge1xyXG4gICAgICAgIG4uZGVsZXRlKGVbMF0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==