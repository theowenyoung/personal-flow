import { Empty } from "./rows.ts";
export class RowObjects {
    _rows;
    _columns;
    constructor(rows) {
        this._rows = rows;
        if (rows !== Empty) {
            this._columns = this._rows.columns();
        }
    }
    return() {
        return this._rows.return();
    }
    next() {
        const { value, done } = this._rows.next();
        if (done) {
            return { value: value, done: true };
        }
        const rowAsObject = {};
        for (let i = 0; i < value.length; i++) {
            rowAsObject[this._columns[i].name] = value[i];
        }
        return { value: rowAsObject, done: false };
    }
    [Symbol.iterator]() {
        return this;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93X29iamVjdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyb3dfb2JqZWN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWMsS0FBSyxFQUFRLE1BQU0sV0FBVyxDQUFDO0FBRXBELE1BQU0sT0FBTyxVQUFVO0lBQ2IsS0FBSyxDQUFPO0lBQ1osUUFBUSxDQUFnQjtJQWNoQyxZQUFZLElBQVU7UUFDcEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFFbEIsSUFBSSxJQUFJLEtBQUssS0FBSyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUN0QztJQUNILENBQUM7SUFTRCxNQUFNO1FBQ0osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFPRCxJQUFJO1FBQ0YsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzFDLElBQUksSUFBSSxFQUFFO1lBQ1IsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO1NBQ3JDO1FBRUQsTUFBTSxXQUFXLEdBQVEsRUFBRSxDQUFDO1FBRTVCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNoRDtRQUVELE9BQU8sRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQztJQUM3QyxDQUFDO0lBRUQsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2YsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2x1bW5OYW1lLCBFbXB0eSwgUm93cyB9IGZyb20gXCIuL3Jvd3MudHNcIjtcblxuZXhwb3J0IGNsYXNzIFJvd09iamVjdHM8VCBleHRlbmRzIGFueSA9IFJlY29yZDxzdHJpbmcsIGFueT4+IHtcbiAgcHJpdmF0ZSBfcm93czogUm93cztcbiAgcHJpdmF0ZSBfY29sdW1ucz86IENvbHVtbk5hbWVbXTtcblxuICAvKipcbiAgICogUm93T2JqZWN0c1xuICAgKlxuICAgKiBSb3dPYmplY3RzIHJlcHJlc2VudCBhIHNldCBvZiByZXN1bHRzIFxuICAgKiBmcm9tIGEgcXVlcnkgaW4gdGhlIGZvcm0gb2YgYW4gb2JqZWN0LlxuICAgKiBUaGV5IGFyZSBpdGVyYWJsZSBhbmQgeWllbGQgb2JqZWN0cy5cbiAgICpcbiAgICogVGhpcyBjbGFzcyBpcyBub3QgZXhwb3J0ZWQgZnJvbSB0aGUgbW9kdWxlXG4gICAqIGFuZCB0aGUgb25seSBjb3JyZWN0IHdheSB0byBvYnRhaW4gYSBgUm93T2JqZWN0c2BcbiAgICogb2JqZWN0IGlzIGJ5IG1ha2luZyBhIGRhdGFiYXNlIHF1ZXJ5XG4gICAqIGFuZCB1c2luZyB0aGUgYGFzT2JqZWN0KClgIG1ldGhvZCBvbiB0aGUgYFJvd3NgIHJlc3VsdC5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHJvd3M6IFJvd3MpIHtcbiAgICB0aGlzLl9yb3dzID0gcm93cztcblxuICAgIGlmIChyb3dzICE9PSBFbXB0eSkge1xuICAgICAgdGhpcy5fY29sdW1ucyA9IHRoaXMuX3Jvd3MuY29sdW1ucygpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSb3dPYmplY3RzLnJldHVyblxuICAgKlxuICAgKiBJbXBsZW1lbnRzIHRoZSBjbG9zaW5nIGl0ZXJhdG9yXG4gICAqIHByb3RvY29sLiBTZWUgYWxzbzpcbiAgICogaHR0cHM6Ly9leHBsb3Jpbmdqcy5jb20vZXM2L2NoX2l0ZXJhdGlvbi5odG1sI3NlY19jbG9zaW5nLWl0ZXJhdG9yc1xuICAgKi9cbiAgcmV0dXJuKCk6IEl0ZXJhdG9yUmVzdWx0PFQ+IHtcbiAgICByZXR1cm4gdGhpcy5fcm93cy5yZXR1cm4oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSb3dPYmplY3RzLm5leHRcbiAgICpcbiAgICogSW1wbGVtZW50cyB0aGUgaXRlcmF0b3IgcHJvdG9jb2wuXG4gICAqL1xuICBuZXh0KCk6IEl0ZXJhdG9yUmVzdWx0PFQ+IHtcbiAgICBjb25zdCB7IHZhbHVlLCBkb25lIH0gPSB0aGlzLl9yb3dzLm5leHQoKTtcbiAgICBpZiAoZG9uZSkge1xuICAgICAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiB0cnVlIH07XG4gICAgfVxuXG4gICAgY29uc3Qgcm93QXNPYmplY3Q6IGFueSA9IHt9O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgcm93QXNPYmplY3RbdGhpcy5fY29sdW1ucyFbaV0ubmFtZV0gPSB2YWx1ZVtpXTtcbiAgICB9XG5cbiAgICByZXR1cm4geyB2YWx1ZTogcm93QXNPYmplY3QsIGRvbmU6IGZhbHNlIH07XG4gIH1cblxuICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuIl19